# Bech prefixes for network.
bech-prefix = "cosmos"
# If a network has specific bech prefixes for validator and for consensus node
# and their pubkeys, it's possible to specify them separately.
bech-validator-prefix = "cosmosvaloper"
bech-validator-pubkey-prefix = "cosmosvaloperpub"
bech-consensus-node-prefix = "cosmosvalcons"
bech-consensus-node-pubkey-prefix = "cosmosvalconspub"
# Scrape interval, in seconds. Defaults to 120
interval = 120
# List of validators to monitor, with it specified, only the selected validators
# will be monitored. Cannot be used together with exclude-validators.
# If both include-validators and exclude-validators are not specified,
# all validators will be monitored.
include-validators = ["cosmosvaloperxxx"]
# List of validators to exclude from monitoring, with it specified, all validators except mentioned
# will be monitored. Cannot be used together with include-validators.
exclude-validators = ["cosmosvaloperyyy"]
# Some chains, likely cosmos-sdk, return signing-info without an address, making it impossible
# to match some validators with their signing info, as a result, the validators list returned
# by Telegram bot and the list of monitored validators isn't full. This flag, instead of querying
# all signing infos with a single request, does a query for each validator asking for its signing info.
# This is super ugly and resource consuming, but probably is the only solution. If you face
# the issue of not validators appearing in the list, try switching it to true.
# Defaults to false.
query-each-signing-info = false

# Node config.
[node]
# gRPC node address to get signing info and validators info from, defaults to localhost:9090
grpc-address = "localhost:9090"
# Tendermint RPC node to get block info from. Defaults to http://localhost:26657.
rpc-address = "http://localhost:26657"

# Logging config.
[log]
# Log level. Defaults to 'info', you can set it to 'debug' or even 'trace'
# to make it more verbose.
level = "info"
# Log all output in JSON except for fatal errors, useful if you are using
# logging aggregation solutions such as ELK stack.
json = true

# Chain info config.
[chain-info]
# Mintscan prefix, to generate links to validator.
mintscan-prefix = "cosmos"
# A generic explorer validator page pattern. Should contain %s, which will be replaced
# with validator's moniker, see example. Useful when a project isn't presented on Mintscan,
# but has its own explorer instead. See the example below for Bitsong.
# If provided, then mintscan-prefix is ignored.
validator-page-pattern = "https://explorebitsong.com/validators/%s"

# List of missed blocks groups.
[[missed-blocks-groups]]
# Start value of missed blocks. If a validator's missed blocks counter is between this
# and end value, it will fall under this group.
start = 0
# End value of missed blocks
end = 999
# Emoji displayed when a validator enters this group.
emoji-start = "ðŸŸ¡"
# Emoji displayed when a validator leaves this group.
emoji-end = "ðŸŸ¢"
# Description displayed when a validator enters this group.
desc-start = "is skipping blocks (0-10%)"
# Description displayed when a validator leaves this group.
desc-end = "is recovered (<10%)"

[[missed-blocks-groups]]
start = 1000
end = 4999
emoji-start = "ðŸŸ "
emoji-end = "ðŸŸ¡"
desc-start = "is skipping blocks (>10%)"
desc-end = "is recovering (<50%)"

[[missed-blocks-groups]]
start = 5000
end = 8999
emoji-start = "ðŸ”´"
emoji-end = "ðŸŸ "
desc-start = "is skipping blocks (>50%)"
desc-end = "is recovering (<90%)"

[[missed-blocks-groups]]
start = 9000
end = 10000
emoji-start = "ðŸ”´"
emoji-end = "ðŸŸ "
desc-start = "is skipping blocks (>90%)"
desc-end = "is recovering (90-100%)"

# Telegram reporter. All fields are mandatory, otherwise the reporter won't be enabled.
[telegram]
# A Telegram bot token.
token = "111:222"
# A Telegram chat to send messages to.
chat = -123
# Path to a file storing all information about people's links to validators.
config-path = "/home/user/config/missed-blocks-checker-telegram-labels.toml"

# Slack reporter. All fields are mandatory, otherwise the reporter won't be enabled.
[slack]
# A Slack bot token.
token = "xorb-xxxyyyy"
# A Slack channel or username to send messages to.
chat = "#general"
